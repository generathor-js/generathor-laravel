<?php

namespace App\Http\Controllers\Generathor;

use App\Http\Controllers\Controller as BaseController;
use Closure;
use Illuminate\Database\QueryException;
use Illuminate\Http\Request;
use Illuminate\Routing\Controllers\HasMiddleware;

/**
 * Automatically generated by Generathor
 * Class Controller
 */
class Controller extends BaseController implements HasMiddleware
{

    /**
     * Get the middleware that should be assigned to the controller.
     */
    public static function middleware(): array
    {
        return [
            function (Request $request, Closure $next) {
                $response = $next($request);
    
                if ($response->exception instanceof QueryException) {
                    static::withDangerMessage($response->exception->getMessage());
    
                    return back();
                }
    
                return $response;
            },
        ];
    }


    private static function withMessage(string $message, string $type): void
    {
        session()->flash('flash.banner', $message);
        session()->flash('flash.bannerStyle', $type);
    }

    protected static function withDangerMessage(string $message): void
    {
        static::withMessage($message, 'danger');
    }

    protected static function withSuccessMessage(string $message): void
    {
        static::withMessage($message, 'success');
    }
}
