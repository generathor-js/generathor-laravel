<?php

namespace {{namespace}};

use EloquentFilter\ModelFilter;

/**
 * Automatically generated by Generathor
 *
 * Class {{class}}
 */
class {{class}} extends ModelFilter
{
    protected $drop_id = false;
{{#each columns}}
{{#if (eq type "record")}}

    public function {{attribute}}($value)
    {
        return $this->where('{{name}}', $value);
    }
{{else if (eq type "pk")}}

    public function {{attribute}}($value)
    {
        return $this->where('{{name}}', $value);
    }
{{else if (eq type "int")}}

    public function {{attribute}}From($value)
    {
        return $this->where('{{name}}', '>=', $value);
    }

    public function {{attribute}}To($value)
    {
        return $this->where('{{name}}', '<=', $value);
    }
{{else if (eq type "float")}}

    public function {{attribute}}From($value)
    {
        return $this->where('{{name}}', '>=', $value);
    }

    public function {{attribute}}To($value)
    {
        return $this->where('{{name}}', '<=', $value);
    }
{{else if (eq type "bool")}}

    public function {{attribute}}($value)
    {
        if ($value === '1') {
            return $this->where('{{name}}', true);
        }

        return $this->where(function ($query) {
            $query->whereNull('{{name}}')
                ->orWhere('{{name}}', false);
        });
    }
{{else if (eq type "string")}}

    public function {{attribute}}($value)
    {
        return $this->where('{{name}}', 'LIKE', "%$value%");
    }
{{else if (eq type "date")}}

    public function {{attribute}}From($value)
    {
        return $this->where('{{name}}', '>=', $value);
    }

    public function {{attribute}}To($value)
    {
        return $this->where('{{name}}', '<=', $value);
    }
{{else}}

    public function {{attribute}}($value)
    {
        return $this->where('{{name}}', $value);
    }
{{/if}}
{{/each}}
}
